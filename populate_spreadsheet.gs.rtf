{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red20\green67\blue174;\red246\green247\blue249;\red46\green49\blue51;
\red24\green25\blue27;\red186\green6\blue115;\red77\green80\blue85;\red162\green0\blue16;\red18\green115\blue126;
}
{\*\expandedcolortbl;;\cssrgb\c9412\c35294\c73725;\cssrgb\c97255\c97647\c98039;\cssrgb\c23529\c25098\c26275;
\cssrgb\c12549\c12941\c14118;\cssrgb\c78824\c15294\c52549;\cssrgb\c37255\c38824\c40784;\cssrgb\c70196\c7843\c7059;\cssrgb\c3529\c52157\c56863;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 onOpen\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 ui\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 getUi\cf4 \strokec4 ();\cb1 \
\cb3   \cb1 \
\cb3   \cf7 \strokec7 // Create a new menu in the Google Docs UI.\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 ui\cf4 \strokec4 .\cf5 \strokec5 createMenu\cf4 \strokec4 (\cf8 \strokec8 'Figure Generators'\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf8 \strokec8 "Generate All Figures"\cf4 \strokec4 , \cf8 \strokec8 "genAll"\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf8 \strokec8 'Generate Figure One'\cf4 \strokec4 , \cf8 \strokec8 'figureOne'\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf8 \strokec8 'Generate Figure Two'\cf4 \strokec4 , \cf8 \strokec8 'figureTwo'\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf8 \strokec8 'Generate Figure Three'\cf4 \strokec4 , \cf8 \strokec8 'figureThree'\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf8 \strokec8 'Generate Figure Four'\cf4 \strokec4 , \cf8 \strokec8 'figureFour'\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf8 \strokec8 'Generate Figure Five'\cf4 \strokec4 , \cf8 \strokec8 'figureFive'\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf8 \strokec8 'Generate Figure Six'\cf4 \strokec4 , \cf8 \strokec8 'figureSix'\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf8 \strokec8 'Clear Spreadsheet'\cf4 \strokec4 , \cf8 \strokec8 'clearSpreadsheet'\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 addToUi\cf4 \strokec4 ();\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 figureOne\cf4 \strokec4 () \{\cb1 \
\cf2 \cb3 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalDocId\cf4 \strokec4  = \cf8 \strokec8 '17WNH_DGlP9pvsFj4v4EkQnrRv2ygJhR7kxUKliq0qYI'\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newDocId\cf4 \strokec4  = \cf8 \strokec8 '1YoalnLbU7oKYKfQu-mB4KM-xqVgOEhmafXcdzI4QwHw'\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 // Access the original spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 originalDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSheet\cf4 \strokec4  = \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Calculations'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalColumnGroups\cf4 \strokec4  = [[\cf8 \strokec8 'H2:M2'\cf4 \strokec4 ], [\cf8 \strokec8 'P2:U2'\cf4 \strokec4 ], [\cf8 \strokec8 'X2:AC2'\cf4 \strokec4 ], [\cf8 \strokec8 'AN2:AS2'\cf4 \strokec4 ]];\cb1 \
\
\cb3   \cf7 \strokec7 // Access the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 newDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSheet\cf4 \strokec4  = \cf5 \strokec5 newSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Sheet2'\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3     \cf7 \strokec7 // Set the headers in the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnNames\cf4 \strokec4  = [\cf8 \strokec8 'Academia'\cf4 \strokec4 , \cf8 \strokec8 'Federal: NOAA'\cf4 \strokec4 , \cf8 \strokec8 'Federal: Other'\cf4 \strokec4 , \cf8 \strokec8 'Nongovernmental'\cf4 \strokec4 , \cf8 \strokec8 'Private Sector'\cf4 \strokec4 , \cf8 \strokec8 'State'\cf4 \strokec4 ];\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 rowNames\cf4 \strokec4  = [\cf8 \strokec8 'Pre-Proposals'\cf4 \strokec4 , \cf8 \strokec8 'Encouraged'\cf4 \strokec4 , \cf8 \strokec8 'Submitted'\cf4 \strokec4 , \cf8 \strokec8 'Awarded'\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  < \cf5 \strokec5 columnNames\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf5 \strokec5 columnNames\cf4 \strokec4 [\cf5 \strokec5 i\cf4 \strokec4 ]);\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf7 \strokec7 // Copy data from original to new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  < \cf5 \strokec5 rowNames\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf5 \strokec5 rowNames\cf4 \strokec4 [\cf5 \strokec5 i\cf4 \strokec4 ]);\cb1 \
\
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 originalColumnGroups\cf4 \strokec4 [\cf5 \strokec5 i\cf4 \strokec4 ][\cf9 \strokec9 0\cf4 \strokec4 ]).\cf5 \strokec5 getValues\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 columnValues\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ].\cf5 \strokec5 length\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 columnValues\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 rowNumber\cf4 \strokec4  = \cf9 \strokec9 1\cf4 \strokec4 ; \cf7 \strokec7 // row number to be shifted\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 lastColumn\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getLastColumn\cf4 \strokec4 (); \cf7 \strokec7 // get last column\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 rowData\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 rowNumber\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 lastColumn\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 ()[\cf9 \strokec9 0\cf4 \strokec4 ]; \cf7 \strokec7 // get the data in the row\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 rowData\cf4 \strokec4 .\cf5 \strokec5 unshift\cf4 \strokec4 (\cf8 \strokec8 "Figure 1"\cf4 \strokec4 ); \cf7 \strokec7 // insert a blank cell at the beginning of the data\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 rowData\cf4 \strokec4 .\cf5 \strokec5 pop\cf4 \strokec4 (); \cf7 \strokec7 // remove the last element to keep the row length consistent\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 rowNumber\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 lastColumn\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 ([\cf5 \strokec5 rowData\cf4 \strokec4 ]); \cf7 \strokec7 // write the data back into the row\cf4 \cb1 \strokec4 \
\
\cb3   \cf7 \strokec7 // Create a chart\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 chartBuilder\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 newChart\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 chartBuilder\cf4 \strokec4 .\cf5 \strokec5 addRange\cf4 \strokec4 (\cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A1:G5'\cf4 \strokec4 ))\cb1 \
\cb3               .\cf5 \strokec5 setChartType\cf4 \strokec4 (\cf6 \strokec6 Charts\cf4 \strokec4 .\cf6 \strokec6 ChartType\cf4 \strokec4 .\cf6 \strokec6 COLUMN\cf4 \strokec4 )\cb1 \
\cb3               .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'series'\cf4 \strokec4 , \{\cb1 \
\cb3                   \cf9 \strokec9 0\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'blue'\cf4 \strokec4 \},\cb1 \
\cb3                   \cf9 \strokec9 1\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'lightblue'\cf4 \strokec4 \},\cb1 \
\cb3                   \cf9 \strokec9 2\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'darkblue'\cf4 \strokec4 \},\cb1 \
\cb3                   \cf9 \strokec9 3\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 '#ADD8E6'\cf4 \strokec4 \},\cb1 \
\cb3                   \cf9 \strokec9 4\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 '#0000FF'\cf4 \strokec4 \},\cb1 \
\cb3                   \cf9 \strokec9 5\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 '#00008B'\cf4 \strokec4 \}\cb1 \
\cb3               \}) \cb1 \
\cb3               .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'legend'\cf4 \strokec4 , \{\cf5 \strokec5 position\cf4 \strokec4 : \cf8 \strokec8 'right'\cf4 \strokec4 \})\cb1 \
\cb3               .\cf5 \strokec5 setNumHeaders\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3               .\cf5 \strokec5 setPosition\cf4 \strokec4 (\cf9 \strokec9 6\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 );\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 chart\cf4 \strokec4  = \cf5 \strokec5 chartBuilder\cf4 \strokec4 .\cf5 \strokec5 build\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 insertChart\cf4 \strokec4 (\cf5 \strokec5 chart\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 figureTwo\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalDocId\cf4 \strokec4  = \cf8 \strokec8 '17WNH_DGlP9pvsFj4v4EkQnrRv2ygJhR7kxUKliq0qYI'\cf4 \strokec4 ;\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newDocId\cf4 \strokec4  = \cf8 \strokec8 '1YoalnLbU7oKYKfQu-mB4KM-xqVgOEhmafXcdzI4QwHw'\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 // Access the original spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 originalDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSheet\cf4 \strokec4  = \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Calculations'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Access the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 newDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSheet\cf4 \strokec4  = \cf5 \strokec5 newSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Sheet2'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Set the headers in row 28 of the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A28'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Figure 2'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'B28'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Pre-Proposals'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'C28'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Encouraged'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'D28'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Full Proposals'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'E28'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Awards'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Copy column A from original to new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnAValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A2:A6'\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 convertedValues\cf4 \strokec4  = \cf5 \strokec5 columnAValues\cf4 \strokec4 .\cf5 \strokec5 map\cf4 \strokec4 (\cf2 \strokec2 function\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4 ) \{ \cf2 \strokec2 return\cf4 \strokec4  [\cf6 \strokec6 Number\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ])]; \}); \cf7 \strokec7 // Convert to numbers\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A29:A33'\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 convertedValues\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Let's assume your headers are "Header1", "Header2", "Header3", "Header4".\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalHeaders\cf4 \strokec4  = [\cf8 \strokec8 '# Preproposals'\cf4 \strokec4 , \cf8 \strokec8 '# Enc Preproposals'\cf4 \strokec4 , \cf8 \strokec8 '# Full Proposals'\cf4 \strokec4 , \cf8 \strokec8 '# Awarded'\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf7 \strokec7 // Get the first row which contains the headers.\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 headers\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getLastColumn\cf4 \strokec4 ()).\cf5 \strokec5 getValues\cf4 \strokec4 ()[\cf9 \strokec9 0\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf7 \strokec7 // Find the columns corresponding to the headers.\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalColumns\cf4 \strokec4  = [];\cb1 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 j\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 j\cf4 \strokec4  < \cf5 \strokec5 originalHeaders\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 j\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 colIndex\cf4 \strokec4  = \cf5 \strokec5 headers\cf4 \strokec4 .\cf5 \strokec5 indexOf\cf4 \strokec4 (\cf5 \strokec5 originalHeaders\cf4 \strokec4 [\cf5 \strokec5 j\cf4 \strokec4 ]) + \cf9 \strokec9 1\cf4 \strokec4 ; \cf7 \strokec7 // +1 because column index starts from 1\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 colIndex\cf4 \strokec4  !== \cf9 \strokec9 0\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 originalColumns\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 (\cf5 \strokec5 colIndex\cf4 \strokec4 );\cb1 \
\cb3     \} \cf2 \strokec2 else\cf4 \strokec4  \{\cb1 \
\cb3       \cf6 \strokec6 Logger\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf8 \strokec8 "Header not found: "\cf4 \strokec4  + \cf5 \strokec5 originalHeaders\cf4 \strokec4 [\cf5 \strokec5 j\cf4 \strokec4 ]);\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf7 \strokec7 // Now originalColumns contains column numbers instead of letters. The rest of the code remains the same.\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnValues\cf4 \strokec4 ;\cb1 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  < \cf5 \strokec5 originalColumns\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf5 \strokec5 columnValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf5 \strokec5 originalColumns\cf4 \strokec4 [\cf5 \strokec5 i\cf4 \strokec4 ], \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 (); \cf7 \strokec7 // start from row 2, for 5 rows.\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 29\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 columnValues\cf4 \strokec4 ); \cf7 \strokec7 // Columns B to E\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3   \cb1 \
\cb3   \cf7 \strokec7 // Set number format for columns B to E in new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  < \cf9 \strokec9 4\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 29\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 setNumberFormat\cf4 \strokec4 (\cf8 \strokec8 '0'\cf4 \strokec4 ); \cf7 \strokec7 // Set to whole number format\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\
\cb3   \cf7 \strokec7 // Sort the data in ascending order based on column A (Figure 2) values\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 dataRange\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A29:E33'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 dataRange\cf4 \strokec4 .\cf5 \strokec5 sort\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Create a chart\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 chartBuilder\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 newChart\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 chartBuilder\cf4 \strokec4 .\cf5 \strokec5 addRange\cf4 \strokec4 (\cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A28:E33'\cf4 \strokec4 )) \cf7 \strokec7 // Use only the data range, excluding headers\cf4 \cb1 \strokec4 \
\cb3               .\cf5 \strokec5 setChartType\cf4 \strokec4 (\cf6 \strokec6 Charts\cf4 \strokec4 .\cf6 \strokec6 ChartType\cf4 \strokec4 .\cf6 \strokec6 COLUMN\cf4 \strokec4 )\cb1 \
\cb3               .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'hAxis.title'\cf4 \strokec4 , \cf8 \strokec8 'Fiscal Year'\cf4 \strokec4 )\cb1 \
\cb3               .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'series'\cf4 \strokec4 , \{\cb1 \
\cb3                   \cf9 \strokec9 0\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'blue'\cf4 \strokec4 \},\cb1 \
\cb3                   \cf9 \strokec9 1\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'lightblue'\cf4 \strokec4 \},\cb1 \
\cb3                   \cf9 \strokec9 2\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'darkblue'\cf4 \strokec4 \},\cb1 \
\cb3                   \cf9 \strokec9 3\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'blue'\cf4 \strokec4 \}\cb1 \
\cb3               \}) \cb1 \
\cb3               .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'legend'\cf4 \strokec4 , \{\cf5 \strokec5 position\cf4 \strokec4 : \cf8 \strokec8 'right'\cf4 \strokec4 \})\cb1 \
\cb3               .\cf5 \strokec5 setNumHeaders\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3               .\cf5 \strokec5 setPosition\cf4 \strokec4 (\cf9 \strokec9 34\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 );\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 chart\cf4 \strokec4  = \cf5 \strokec5 chartBuilder\cf4 \strokec4 .\cf5 \strokec5 build\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 insertChart\cf4 \strokec4 (\cf5 \strokec5 chart\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 figureThree\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalDocId\cf4 \strokec4  = \cf8 \strokec8 '17WNH_DGlP9pvsFj4v4EkQnrRv2ygJhR7kxUKliq0qYI'\cf4 \strokec4 ;\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newDocId\cf4 \strokec4  = \cf8 \strokec8 '1YoalnLbU7oKYKfQu-mB4KM-xqVgOEhmafXcdzI4QwHw'\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf7 \strokec7 // Access the original spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 originalDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSheet\cf4 \strokec4  = \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Calculations'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Access the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 newDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSheet\cf4 \strokec4  = \cf5 \strokec5 newSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Sheet2'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Set the headers in row 56 of the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A56'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Figure 3'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'B56'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Ocean Exploration'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'C56'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Maritime Heritage'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'D56'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Technology'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Copy column A from original to new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnAValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A2:A6'\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 convertedValues\cf4 \strokec4  = \cf5 \strokec5 columnAValues\cf4 \strokec4 .\cf5 \strokec5 map\cf4 \strokec4 (\cf2 \strokec2 function\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4 ) \{ \cf2 \strokec2 return\cf4 \strokec4  [\cf6 \strokec6 Number\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ])]; \}); \cf7 \strokec7 // Convert to numbers\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A57:A61'\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 convertedValues\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Get header row from the original sheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 headers\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getLastColumn\cf4 \strokec4 ()).\cf5 \strokec5 getValues\cf4 \strokec4 ()[\cf9 \strokec9 0\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf7 \strokec7 // Header names of columns to be copied from original spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 headersOfInterest\cf4 \strokec4  = [\cf8 \strokec8 '# Exp Award'\cf4 \strokec4 , \cf8 \strokec8 '# Arch Award'\cf4 \strokec4 , \cf8 \strokec8 '# Tech Award'\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf5 \strokec5 headersOfInterest\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf2 \strokec2 function\cf4 \strokec4 (\cf5 \strokec5 header\cf4 \strokec4 , \cf5 \strokec5 i\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalColumnNumber\cf4 \strokec4  = \cf5 \strokec5 headers\cf4 \strokec4 .\cf5 \strokec5 indexOf\cf4 \strokec4 (\cf5 \strokec5 header\cf4 \strokec4 ) + \cf9 \strokec9 1\cf4 \strokec4 ; \cf7 \strokec7 // +1 because column numbering starts from 1\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 originalColumnNumber\cf4 \strokec4  > \cf9 \strokec9 0\cf4 \strokec4 ) \{ \cf7 \strokec7 // If header is found\cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf5 \strokec5 originalColumnNumber\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 ();\cb1 \
\cb3       \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 57\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 columnValues\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf7 \strokec7 // Set number format for columns B to D in new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  < \cf9 \strokec9 3\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 57\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 setNumberFormat\cf4 \strokec4 (\cf8 \strokec8 '0'\cf4 \strokec4 ); \cf7 \strokec7 // Set to whole number format\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\
\cb3   \cf7 \strokec7 // Sort the data in ascending order based on column A (Figure 3) values\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 dataRange\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A57:D61'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 dataRange\cf4 \strokec4 .\cf5 \strokec5 sort\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Create a chart\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 chartBuilder\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 newChart\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 chartBuilder\cf4 \strokec4 .\cf5 \strokec5 addRange\cf4 \strokec4 (\cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A56:D61'\cf4 \strokec4 )) \cf7 \strokec7 // Use only the data range, excluding headers\cf4 \cb1 \strokec4 \
\cb3               .\cf5 \strokec5 setChartType\cf4 \strokec4 (\cf6 \strokec6 Charts\cf4 \strokec4 .\cf6 \strokec6 ChartType\cf4 \strokec4 .\cf6 \strokec6 COLUMN\cf4 \strokec4 )\cb1 \
\cb3               .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'hAxis.title'\cf4 \strokec4 , \cf8 \strokec8 'Fiscal Year'\cf4 \strokec4 )\cb1 \
\cb3               .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'series'\cf4 \strokec4 , \{\cb1 \
\cb3                   \cf9 \strokec9 0\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'blue'\cf4 \strokec4 , \cf5 \strokec5 label\cf4 \strokec4 : \cf8 \strokec8 'Ocean Exploration'\cf4 \strokec4 \},\cb1 \
\cb3                   \cf9 \strokec9 1\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'lightblue'\cf4 \strokec4 , \cf5 \strokec5 label\cf4 \strokec4 : \cf8 \strokec8 'Maritime Heritage'\cf4 \strokec4 \},\cb1 \
\cb3                   \cf9 \strokec9 2\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'darkblue'\cf4 \strokec4 , \cf5 \strokec5 label\cf4 \strokec4 : \cf8 \strokec8 'Technology'\cf4 \strokec4 \}\cb1 \
\cb3               \}) \cb1 \
\cb3               .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'legend'\cf4 \strokec4 , \{\cf5 \strokec5 position\cf4 \strokec4 : \cf8 \strokec8 'right'\cf4 \strokec4 \})\cb1 \
\cb3               .\cf5 \strokec5 setNumHeaders\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3               .\cf5 \strokec5 setPosition\cf4 \strokec4 (\cf9 \strokec9 62\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 );\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 chart\cf4 \strokec4  = \cf5 \strokec5 chartBuilder\cf4 \strokec4 .\cf5 \strokec5 build\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 insertChart\cf4 \strokec4 (\cf5 \strokec5 chart\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 figureFour\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalDocId\cf4 \strokec4  = \cf8 \strokec8 '17WNH_DGlP9pvsFj4v4EkQnrRv2ygJhR7kxUKliq0qYI'\cf4 \strokec4 ;\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newDocId\cf4 \strokec4  = \cf8 \strokec8 '1YoalnLbU7oKYKfQu-mB4KM-xqVgOEhmafXcdzI4QwHw'\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf7 \strokec7 // Access the original spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 originalDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSheet\cf4 \strokec4  = \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Calculations'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Access the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 newDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSheet\cf4 \strokec4  = \cf5 \strokec5 newSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Sheet2'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Set the headers in row 84 of the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A84'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Figure 4'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'B84'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Academia'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'C84'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Federal: NOAA'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'D84'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Federal: Other'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'E84'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Nongovernmental'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'F84'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Private Sector'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Copy column A from original to new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnAValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A2:A6'\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 convertedValues\cf4 \strokec4  = \cf5 \strokec5 columnAValues\cf4 \strokec4 .\cf5 \strokec5 map\cf4 \strokec4 (\cf2 \strokec2 function\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4 ) \{ \cf2 \strokec2 return\cf4 \strokec4  [\cf6 \strokec6 Number\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ])]; \}); \cf7 \strokec7 // Convert to numbers\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A85:A89'\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 convertedValues\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Get header row from the original sheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 headers\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getLastColumn\cf4 \strokec4 ()).\cf5 \strokec5 getValues\cf4 \strokec4 ()[\cf9 \strokec9 0\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf7 \strokec7 // Header names of columns to be copied from original spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 headersOfInterest\cf4 \strokec4  = [\cf8 \strokec8 'PI Academic'\cf4 \strokec4 , \cf8 \strokec8 'PI NOAA'\cf4 \strokec4 , \cf8 \strokec8 'PI NOAA'\cf4 \strokec4 , \cf8 \strokec8 'PI NGO'\cf4 \strokec4 , \cf8 \strokec8 'PI Private'\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf5 \strokec5 headersOfInterest\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf2 \strokec2 function\cf4 \strokec4 (\cf5 \strokec5 header\cf4 \strokec4 , \cf5 \strokec5 i\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalColumnNumber\cf4 \strokec4  = \cf5 \strokec5 headers\cf4 \strokec4 .\cf5 \strokec5 indexOf\cf4 \strokec4 (\cf5 \strokec5 header\cf4 \strokec4 ) + \cf9 \strokec9 1\cf4 \strokec4 ; \cf7 \strokec7 // +1 because column numbering starts from 1\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 originalColumnNumber\cf4 \strokec4  > \cf9 \strokec9 0\cf4 \strokec4 ) \{ \cf7 \strokec7 // If header is found\cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf5 \strokec5 originalColumnNumber\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 ();\cb1 \
\cb3       \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 85\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 columnValues\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf7 \strokec7 // Set number format for columns B to F in new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  < \cf9 \strokec9 5\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 85\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 setNumberFormat\cf4 \strokec4 (\cf8 \strokec8 '$#,##0.00'\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf7 \strokec7 // Sort the data in ascending order based on column A (Figure 4) values\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 dataRange\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A85:F89'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 dataRange\cf4 \strokec4 .\cf5 \strokec5 sort\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 dataRange\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A84:F89'\cf4 \strokec4 );\cb1 \
\cb3   \cf7 \strokec7 // Create a chart\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 chart\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 newChart\cf4 \strokec4 ()\cb1 \
\cb3      .\cf5 \strokec5 setChartType\cf4 \strokec4 (\cf6 \strokec6 Charts\cf4 \strokec4 .\cf6 \strokec6 ChartType\cf4 \strokec4 .\cf6 \strokec6 COLUMN\cf4 \strokec4 ) \cf7 \strokec7 // change to column chart\cf4 \cb1 \strokec4 \
\cb3      .\cf5 \strokec5 addRange\cf4 \strokec4 (\cf5 \strokec5 dataRange\cf4 \strokec4 )\cb1 \
\cb3      .\cf5 \strokec5 setPosition\cf4 \strokec4 (\cf9 \strokec9 90\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 )\cb1 \
\cb3      .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'hAxis.title'\cf4 \strokec4 , \cf8 \strokec8 'Fiscal Year'\cf4 \strokec4 )\cb1 \
\cb3      .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'legend'\cf4 \strokec4 , \{\cf5 \strokec5 position\cf4 \strokec4 : \cf8 \strokec8 'right'\cf4 \strokec4 \})\cb1 \
\cb3     .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'series'\cf4 \strokec4 , \{\cf9 \strokec9 0\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'blue'\cf4 \strokec4 \}, \cf9 \strokec9 1\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'lightblue'\cf4 \strokec4 \}, \cf9 \strokec9 2\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'darkblue'\cf4 \strokec4 \}, \cf9 \strokec9 3\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'skyblue'\cf4 \strokec4 \}, \cf9 \strokec9 4\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'steelblue'\cf4 \strokec4 \}\})\cb1 \
\cb3     .\cf5 \strokec5 setNumHeaders\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 build\cf4 \strokec4 ();\cb1 \
\
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 insertChart\cf4 \strokec4 (\cf5 \strokec5 chart\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 figureFive\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalDocId\cf4 \strokec4  = \cf8 \strokec8 '17WNH_DGlP9pvsFj4v4EkQnrRv2ygJhR7kxUKliq0qYI'\cf4 \strokec4 ;\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newDocId\cf4 \strokec4  = \cf8 \strokec8 '1YoalnLbU7oKYKfQu-mB4KM-xqVgOEhmafXcdzI4QwHw'\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf7 \strokec7 // Access the original spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 originalDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSheet\cf4 \strokec4  = \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Calculations'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Access the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 newDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSheet\cf4 \strokec4  = \cf5 \strokec5 newSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Sheet2'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Set the headers in row 112 of the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A112'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Figure 5'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'B112'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Academia'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'C112'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Federal: NOAA'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'D112'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Federal: Other'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'E112'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Nongovernmental'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'F112'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Private Sector'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Copy column A from original to new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnAValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A2:A6'\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A113:A117'\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 columnAValues\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Get header row from the original sheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 headers\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getLastColumn\cf4 \strokec4 ()).\cf5 \strokec5 getValues\cf4 \strokec4 ()[\cf9 \strokec9 0\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf7 \strokec7 // Header names of columns to be copied from original spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 headersOfInterest\cf4 \strokec4  = [\cf8 \strokec8 '$ Award Acad'\cf4 \strokec4 , \cf8 \strokec8 '$ Award NOAA'\cf4 \strokec4 , \cf8 \strokec8 '$ Award Other'\cf4 \strokec4 , \cf8 \strokec8 '$ Award NGO'\cf4 \strokec4 , \cf8 \strokec8 '$ Award Priv'\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf5 \strokec5 headersOfInterest\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf2 \strokec2 function\cf4 \strokec4 (\cf5 \strokec5 header\cf4 \strokec4 , \cf5 \strokec5 i\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalColumnNumber\cf4 \strokec4  = \cf5 \strokec5 headers\cf4 \strokec4 .\cf5 \strokec5 indexOf\cf4 \strokec4 (\cf5 \strokec5 header\cf4 \strokec4 ) + \cf9 \strokec9 1\cf4 \strokec4 ; \cf7 \strokec7 // +1 because column numbering starts from 1\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 originalColumnNumber\cf4 \strokec4  > \cf9 \strokec9 0\cf4 \strokec4 ) \{ \cf7 \strokec7 // If header is found\cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf5 \strokec5 originalColumnNumber\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 ();\cb1 \
\cb3       \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 113\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 columnValues\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf7 \strokec7 // Set number format for columns B to F in new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  < \cf9 \strokec9 5\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 113\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4  + \cf5 \strokec5 i\cf4 \strokec4 , \cf9 \strokec9 5\cf4 \strokec4 ).\cf5 \strokec5 setNumberFormat\cf4 \strokec4 (\cf8 \strokec8 '$#,##0.00'\cf4 \strokec4 );\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf7 \strokec7 // Sort the data in ascending order based on column A (Figure 5) values\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 dataRange\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A113:F117'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 dataRange\cf4 \strokec4 .\cf5 \strokec5 sort\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 dataRange\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A112:F117'\cf4 \strokec4 );\cb1 \
\cb3   \cf7 \strokec7 // Create a chart\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 chart\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 newChart\cf4 \strokec4 ()\cb1 \
\cb3     .\cf5 \strokec5 setChartType\cf4 \strokec4 (\cf6 \strokec6 Charts\cf4 \strokec4 .\cf6 \strokec6 ChartType\cf4 \strokec4 .\cf6 \strokec6 COLUMN\cf4 \strokec4 ) \cf7 \strokec7 // change to column chart\cf4 \cb1 \strokec4 \
\cb3     .\cf5 \strokec5 addRange\cf4 \strokec4 (\cf5 \strokec5 dataRange\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 setPosition\cf4 \strokec4 (\cf9 \strokec9 118\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'hAxis.title'\cf4 \strokec4 , \cf8 \strokec8 'Fiscal Year'\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'legend'\cf4 \strokec4 , \{\cf5 \strokec5 position\cf4 \strokec4 : \cf8 \strokec8 'right'\cf4 \strokec4 \})\cb1 \
\cb3     .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'series'\cf4 \strokec4 , \{\cf9 \strokec9 0\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'blue'\cf4 \strokec4 \}, \cf9 \strokec9 1\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'lightblue'\cf4 \strokec4 \}, \cf9 \strokec9 2\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'darkblue'\cf4 \strokec4 \}, \cf9 \strokec9 3\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'skyblue'\cf4 \strokec4 \}, \cf9 \strokec9 4\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'steelblue'\cf4 \strokec4 \}\})\cb1 \
\cb3     .\cf5 \strokec5 setNumHeaders\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 build\cf4 \strokec4 ();\cb1 \
\
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 insertChart\cf4 \strokec4 (\cf5 \strokec5 chart\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 figureSix\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalDocId\cf4 \strokec4  = \cf8 \strokec8 '17WNH_DGlP9pvsFj4v4EkQnrRv2ygJhR7kxUKliq0qYI'\cf4 \strokec4 ;\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newDocId\cf4 \strokec4  = \cf8 \strokec8 '1YoalnLbU7oKYKfQu-mB4KM-xqVgOEhmafXcdzI4QwHw'\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 // Access the original spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 originalDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 originalSheet\cf4 \strokec4  = \cf5 \strokec5 originalSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Calculations'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Access the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSpreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 newDocId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 newSheet\cf4 \strokec4  = \cf5 \strokec5 newSpreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Sheet2'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Set the headers in row 140 of the new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A140'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Figure 6'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'B140'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Awarded'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'C140'\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf8 \strokec8 'Leveraged'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Copy column A from original to new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnAValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A2:A6'\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A141:A145'\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 columnAValues\cf4 \strokec4 );\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 headerRow\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getLastColumn\cf4 \strokec4 ()).\cf5 \strokec5 getValues\cf4 \strokec4 ()[\cf9 \strokec9 0\cf4 \strokec4 ];\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 headerIndexStart\cf4 \strokec4  = -\cf9 \strokec9 1\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  < \cf5 \strokec5 headerRow\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 headerRow\cf4 \strokec4 [\cf5 \strokec5 i\cf4 \strokec4 ] === \cf8 \strokec8 "$ Award Acad"\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 headerIndexStart\cf4 \strokec4  = \cf5 \strokec5 i\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 ;  \cf7 \strokec7 // Add 1 because column indices are 1-based in Apps Script\cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 break\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 headerIndexEnd\cf4 \strokec4  = -\cf9 \strokec9 1\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  < \cf5 \strokec5 headerRow\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 headerRow\cf4 \strokec4 [\cf5 \strokec5 i\cf4 \strokec4 ] === \cf8 \strokec8 "$ Award Tribal"\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 headerIndexEnd\cf4 \strokec4  = \cf5 \strokec5 i\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 ;  \cf7 \strokec7 // Add 1 because column indices are 1-based in Apps Script\cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 break\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf6 \strokec6 Logger\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf5 \strokec5 headerIndexStart\cf4 \strokec4 )\cb1 \
\cb3   \cf6 \strokec6 Logger\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf5 \strokec5 headerIndexEnd\cf4 \strokec4 )\cb1 \
\
\cb3   \cf7 \strokec7 // Calculate sum of columns BZ to CG (columns 78 to 87) for each row and copy to column B of new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf9 \strokec9 2\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  <= \cf9 \strokec9 6\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 sum\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 j\cf4 \strokec4  = \cf5 \strokec5 headerIndexStart\cf4 \strokec4 ; \cf5 \strokec5 j\cf4 \strokec4  <= \cf5 \strokec5 headerIndexEnd\cf4 \strokec4 ; \cf5 \strokec5 j\cf4 \strokec4 ++) \{\cb1 \
\cb3       \cf5 \strokec5 sum\cf4 \strokec4  += \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 i\cf4 \strokec4 , \cf5 \strokec5 j\cf4 \strokec4 ).\cf5 \strokec5 getValue\cf4 \strokec4 ();\cb1 \
\cb3     \}\cb1 \
\cb3     \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 i\cf4 \strokec4  + \cf9 \strokec9 139\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf5 \strokec5 sum\cf4 \strokec4 ); \cf7 \strokec7 // row number in new sheet is original row number + 139\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\
\cb3   \cf7 \strokec7 // Copy column BO (column 68) from original to column C of new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 columnBOValues\cf4 \strokec4  = \cf5 \strokec5 originalSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'BO2:BO6'\cf4 \strokec4 ).\cf5 \strokec5 getValues\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'C141:C145'\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 columnBOValues\cf4 \strokec4 );\cb1 \
\
\cb3   \cf7 \strokec7 // Set number format for columns B and C in new spreadsheet\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'B141:B145'\cf4 \strokec4 ).\cf5 \strokec5 setNumberFormat\cf4 \strokec4 (\cf8 \strokec8 '$#,##0.00'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'C141:C145'\cf4 \strokec4 ).\cf5 \strokec5 setNumberFormat\cf4 \strokec4 (\cf8 \strokec8 '$#,##0.00'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 dataRange\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A141:C145'\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 dataRange\cf4 \strokec4 .\cf5 \strokec5 sort\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 dataRange\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf8 \strokec8 'A140:C145'\cf4 \strokec4 );\cb1 \
\cb3   \cf7 \strokec7 // Create a chart\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 chart\cf4 \strokec4  = \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 newChart\cf4 \strokec4 ()\cb1 \
\cb3      .\cf5 \strokec5 setChartType\cf4 \strokec4 (\cf6 \strokec6 Charts\cf4 \strokec4 .\cf6 \strokec6 ChartType\cf4 \strokec4 .\cf6 \strokec6 COLUMN\cf4 \strokec4 ) \cf7 \strokec7 // change to column chart\cf4 \cb1 \strokec4 \
\cb3      .\cf5 \strokec5 addRange\cf4 \strokec4 (\cf5 \strokec5 dataRange\cf4 \strokec4 )\cb1 \
\cb3      .\cf5 \strokec5 setPosition\cf4 \strokec4 (\cf9 \strokec9 146\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 , \cf9 \strokec9 0\cf4 \strokec4 )\cb1 \
\cb3      .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'hAxis.title'\cf4 \strokec4 , \cf8 \strokec8 'Fiscal Year'\cf4 \strokec4 )\cb1 \
\cb3      .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'legend'\cf4 \strokec4 , \{\cf5 \strokec5 position\cf4 \strokec4 : \cf8 \strokec8 'right'\cf4 \strokec4 \})\cb1 \
\cb3      .\cf5 \strokec5 setOption\cf4 \strokec4 (\cf8 \strokec8 'series'\cf4 \strokec4 , \{\cf9 \strokec9 0\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'blue'\cf4 \strokec4 \}, \cf9 \strokec9 1\cf4 \strokec4 : \{\cf5 \strokec5 color\cf4 \strokec4 : \cf8 \strokec8 'lightblue'\cf4 \strokec4 \}\}) \cf7 \strokec7 // No need to specify targetAxisIndex\cf4 \cb1 \strokec4 \
\cb3      .\cf5 \strokec5 setNumHeaders\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3      .\cf5 \strokec5 build\cf4 \strokec4 ();\cb1 \
\
\cb3   \cf5 \strokec5 newSheet\cf4 \strokec4 .\cf5 \strokec5 insertChart\cf4 \strokec4 (\cf5 \strokec5 chart\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 genAll\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 figureOne\cf4 \strokec4 ()\cb1 \
\cb3   \cf5 \strokec5 figureTwo\cf4 \strokec4 ()\cb1 \
\cb3   \cf5 \strokec5 figureThree\cf4 \strokec4 ()\cb1 \
\cb3   \cf5 \strokec5 figureFour\cf4 \strokec4 ()\cb1 \
\cb3   \cf5 \strokec5 figureFive\cf4 \strokec4 ()\cb1 \
\cb3   \cf5 \strokec5 figureSix\cf4 \strokec4 ()\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 clearSpreadsheet\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 spreadsheetId\cf4 \strokec4  = \cf8 \strokec8 '1YoalnLbU7oKYKfQu-mB4KM-xqVgOEhmafXcdzI4QwHw'\cf4 \strokec4 ; \cf7 \strokec7 // replace with your Spreadsheet ID\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 spreadsheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf5 \strokec5 spreadsheetId\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 sheet\cf4 \strokec4  = \cf5 \strokec5 spreadsheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf8 \strokec8 'Sheet2'\cf4 \strokec4 );\cb1 \
\
\cb3   \cf5 \strokec5 sheet\cf4 \strokec4 .\cf5 \strokec5 clear\cf4 \strokec4 (); \cf7 \strokec7 // this will clear the content, formats, and comments\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 charts\cf4 \strokec4  = \cf5 \strokec5 sheet\cf4 \strokec4 .\cf5 \strokec5 getCharts\cf4 \strokec4 ();\cb1 \
\
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 j\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 j\cf4 \strokec4  < \cf5 \strokec5 charts\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 j\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf5 \strokec5 sheet\cf4 \strokec4 .\cf5 \strokec5 removeChart\cf4 \strokec4 (\cf5 \strokec5 charts\cf4 \strokec4 [\cf5 \strokec5 j\cf4 \strokec4 ]); \cf7 \strokec7 // this will remove the charts\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
}